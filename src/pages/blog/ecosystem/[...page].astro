---
import type { GetStaticPathsOptions } from "astro";
import BaseLayout from "@layouts/BaseLayout.astro";
import { SITE_TITLE, SITE_DESCRIPTION } from "../../../consts";
import { getCollection } from "astro:content";
import FormattedDate from "@components/FormattedDate.astro";
import Pagination from "@components/Pagination.astro";
import BlogPostPreview from "@components/BlogPostPreview.astro";
import BlogHeader from "@components/BlogHeader.astro";


interface Post {
    slug: string;
    body: string;
    collection: string;
    data: {
        title: string;
        description: string;
        date: string;
        keywords?: any[];
    };
};

// 分页数据在page参数中传递
const { page } = Astro.props;

const posts = await getCollection("blog");

const allPages = [...Array(page.lastPage).keys()].map((num) => {
    return `/blog/article${num === 0 ? "" : `/${String(num + 1)}`}`;
});

export async function getStaticPaths({ paginate }: GetStaticPathsOptions) {
    const posts = await getCollection("blog");

    const sortedPosts = posts.sort(
        (a,b)=> new Date(b.data.date).valueOf() - new Date(a.data.date).valueOf()
    );

    const ecosystemPosts = sortedPosts.filter((post) => {
        return post.data.category === "ecosystem";
    });
    return paginate(ecosystemPosts, { pageSize: 9 });
}
---

<BaseLayout title="Nacos Blog" position="static">
    <BlogHeader />
    <div
        class="flex flex-col items-center gap-20 py-8 lg:p-12 xl:p-20 bg-gray-14"
    >
        <ul class="flex flex-row gap-y-4 md:gap-y-6 lg:gap-y-8 justify-center">
            {
                page.data.map((post) => (
                    <div class="2xl:flex-1 xl:flex-1 lg:flex-1">
                        <BlogPostPreview post={post as Post} posterWidth="350" />
                    </div>
                ))
            }
        </ul>

        <Pagination restRoute allPages={allPages} page={page} class="mx-auto" />
    </div>
</BaseLayout>
<style>
    main {
        width: 960px;
    }
    ul {
        display: flex;
        flex-wrap: wrap;
        gap: 2rem;
        list-style-type: none;
        margin: 0;
        padding: 0;
    }
    ul li {
        width: calc(50% - 1rem);
    }
    ul li * {
        text-decoration: none;
        transition: 0.2s ease;
    }
    ul li:first-child {
        width: 100%;
        margin-bottom: 1rem;
        text-align: center;
    }
    ul li:first-child img {
        width: 100%;
    }
    ul li:first-child .title {
        font-size: 2.369rem;
    }
    ul li img {
        margin-bottom: 0.5rem;
        border-radius: 12px;
    }
    ul li a {
        display: block;
    }
    .title {
        margin: 0;
        color: rgb(var(--black));
        line-height: 1;
    }
    .date {
        margin: 0;
        color: rgb(var(--gray));
    }
    ul li a:hover h4,
    ul li a:hover .date {
        color: rgb(var(--accent));
    }
    ul a:hover img {
        box-shadow: var(--box-shadow);
    }
    @media (max-width: 720px) {
        ul {
            gap: 0.5em;
        }
        ul li {
            width: 100%;
            text-align: center;
        }
        ul li:first-child {
            margin-bottom: 0;
        }
        ul li:first-child .title {
            font-size: 1.563em;
        }
    }
</style>
