---
interface Props {
  align?: 'home' | 'docs',
  position?: 'static' | 'sticky';
}

const { align = 'home', position = 'sticky' } = Astro.props;
const height = align === 'home' ? '4rem' : '3.5rem';
const docsSubMenu = {
  shortcutMenus: {
    Documentation: [
      { label: '1.x', url: '/docs/what-is-nacos' },
      { label: '2.x', url: '/docs/v2/what-is-nacos' },
    ]
  }
};
const communitySubMenu = {
  shortcutMenus: {
    COMMUNITY: [
      { label: 'Contact', url: '/' },
      { label: 'Report', url: '/' },
      { label: 'Contribute', url: '/' },
      { label: 'Stars', url: '/' },
    ],
    EVENTS: [
      { label: 'Events', url: '/' },
      { label: 'News', url: '/' },
      { label: 'Meetup', url: '/' },
    ],
    Resources: [
      { label: 'Blog', url: '/blog' },
      { label: 'E-book', url: '/' },
    ],
  },
  shortcutCards: [
    {
      eventName: 'READ ARTICLE',
      imgUrl: '/left-shortcut.png',
      description: 'Key to service-centric (for example microservice or cloud-native) architectures.',
    },
    {
      eventName: 'READ ARTICLE',
      imgUrl: '/right-shortcut.png',
      description: 'An easy-to-use platform for building cloud native applications',
    }
  ],
};

---

<header-layout class="header bg-gray-14 relative" style={`position: ${position}; height: ${height}`}>
  <div data-modal-panel class="modal-panel hidden h-screen absolute left-0 right-0 top-0"></div>
  <div style={`height: ${height}`} class:list={["nav", "bg-gray-14", "relative", "top-0", "right-0", "bottom-0", "left-0", "flex", "items-center", "justify-between",]}>
    <!-- logo -->
    <a href="/">
      <img class="logo" src="/nacos_white.png" />
    </a>
    <!-- 菜单 -->
    <div class="pc_nav_menu flex h-full items-center">
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-docs class="h-full flex items-center p-0.5">
          <span class="title">DOCS</span>
          <svg data-docs-arrow class="arrow ml-2" width="10" height="7" viewBox="0 0 10 7" fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <path d="M8.05264 2L5.05264 5.00649L2.05264 2" stroke="#a3a6b3" stroke-width="1.25" stroke-linecap="square">
            </path>
          </svg>
        </div>
        <div 
          data-docs-dropdown 
          style={`top: ${height}`} 
          class="dropdown-panel bg-gray-14 hidden invisible opacity-0 absolute left-0 right-0"
        >
          <div class="flex pb-10 pt-14 px-24">
            <div class="shortcut-menu flex flex-col px-7 mr-14">
              <span class="text-xs text-gray-10 mb-2">Documentation</span>
              {
                docsSubMenu.shortcutMenus.Documentation.map(menu => {
                  const { label, url } = menu;
                  return (
                    <a href={url} class="flex items-center mt-3 cursor-pointer">
                      <span class="text-sm text-gray-02">{label}</span>
                    </a>
                  );
                })
              }
            </div>
          </div>
        </div>
      </div>
      <span class="text-gray-06 text-xs">|</span>
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-nacos-cloud class="h-full flex items-center p-0.5">
          <span class="title">NACOS CLOUD</span>
        </div>
      </div>
      <span class="text-gray-06 text-xs">|</span>
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-community class="h-full flex items-center p-0.5">
          <span class="title">COMMUNITY</span>
          <svg data-community-arrow class="arrow ml-2" width="10" height="7" viewBox="0 0 10 7" fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <path d="M8.05264 2L5.05264 5.00649L2.05264 2" stroke="#a3a6b3" stroke-width="1.25" stroke-linecap="square">
            </path>
          </svg>
        </div>
        <div 
          data-community-dropdown 
          style={`top: ${height}`} 
          class="dropdown-panel bg-gray-14 hidden invisible opacity-0 absolute left-0 right-0 z-50"
        >
          <div class="flex pb-10 pt-14 px-24 justify-center">
            <div class="flex mr-32">
              <div class="shortcut-menu flex flex-col px-7 mr-14">
                <span class="text-xs text-gray-10 mb-2">COMMUNITY</span>
                {
                  communitySubMenu.shortcutMenus.COMMUNITY.map(menu => {
                    const { label,url } = menu;
                    return (
                      <a class="text-sm text-gray-02 mt-3 " href={url}>{label}</span>
                    );
                  })
                }
              </div>
              <div class="shortcut-menu flex flex-col px-7 mr-14">
                <span class="text-xs text-gray-10 mb-2">EVENTS</span>
                {
                  communitySubMenu.shortcutMenus.EVENTS.map(menu => {
                    const { label,url } = menu;
                    return (
                    <a class="text-sm text-gray-02 mt-3 " href={url}>{label}</span>
                    );
                  })
                }
                <span class="text-xs text-gray-10 mb-2 mt-10">Resources</span>
                {
                  communitySubMenu.shortcutMenus.Resources.map(menu => {
                    const { label, url } = menu;
                    return (
                       <a class="text-sm text-gray-02 mt-3 " href={url}>{label}</span>
                    );
                  })
                }
              </div>
            </div>
            <div class="flex">
              {
                communitySubMenu.shortcutCards.map((item, index) => {
                  const { eventName, description, imgUrl } = item;
                  return (
                    <div class="shortcut-card bg-gray-13 rounded-2xl p-2 flex flex-col w-64 ml-4">
                      <img class="" src={imgUrl} />
                      <div class="text-blue-01 text-sm mt-3 line-clamp-3 h-16">{description}</div>
                      <button class="btn mt-8 w-fit text-xs bg-gray-12 text-gray-01 border-0 rounded-3xl">{eventName}</button>
                    </div>
                  );
                })
              }
            </div>
          </div>
        </div>
      </div>
      <span class="text-gray-06 text-xs">|</span>
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-demo class="h-full flex items-center p-0.5">
          <span class="title">DEMO</span>
        </div>
      </div>
    </div>
    <!-- 右侧菜单 -->
    <div>
      <slot></slot>
    </div>
    <!-- 小屏适配 -->
    <div class="mobile_nav_menu hidden cursor-pointer">
      <button class="text-gray-01 bg-gray-14 flex items-center">
        {
          align === 'home' ? (
            // <svg class="cursor-pointer" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M21 17H3C2.447 17 2 17.448 2 18C2 18.552 2.447 19 3 19H21C21.553 19 22 18.552 22 18C22 17.448 21.553 17 21 17ZM21 5H3C2.447 5 2 5.448 2 6C2 6.552 2.447 7 3 7H21C21.553 7 22 6.552 22 6C22 5.448 21.553 5 21 5ZM22 12C22 12.552 21.553 13 21 13H3C2.447 13 2 12.552 2 12C2 11.448 2.447 11 3 11H21C21.553 11 22 11.448 22 12Z" fill="currentColor"></path><mask id="mask0" mask="true" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="5" width="20" height="14"><path fill-rule="evenodd" clip-rule="evenodd" d="M21 17H3C2.447 17 2 17.448 2 18C2 18.552 2.447 19 3 19H21C21.553 19 22 18.552 22 18C22 17.448 21.553 17 21 17ZM21 5H3C2.447 5 2 5.448 2 6C2 6.552 2.447 7 3 7H21C21.553 7 22 6.552 22 6C22 5.448 21.553 5 21 5ZM22 12C22 12.552 21.553 13 21 13H3C2.447 13 2 12.552 2 12C2 11.448 2.447 11 3 11H21C21.553 11 22 11.448 22 12Z" fill="currentColor"></path></mask><g mask="url(#mask0)"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 0H24V24H0V0Z" fill="#a3a6b3"></path></g></svg>
            <svg class="cursor-pointer icon ml-8" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6304" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 479.169H438.553c-17.673 0-32 14.327-32 32s14.327 32 32 32h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM319.028 351.594l-160 160 160 160z" fill="#f4f4f6" p-id="6305"></path></svg>
          ) : (
            <svg class="cursor-pointer icon ml-8" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6304" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 479.169H438.553c-17.673 0-32 14.327-32 32s14.327 32 32 32h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM319.028 351.594l-160 160 160 160z" fill="#f4f4f6" p-id="6305"></path></svg>
          )
        }
      </button>
    </div>
    <!-- 移动端导航菜单 -->
    <div 
      data-mobile-menu
      class="overflow-hidden hidden flex flex-col w-screen bg-gray-01 h-screen absolute left-0 right-0 top-0"
    >
      <!-- 顶部logo -->
      <div 
        style={`height: ${height}`} 
        class:list={["bg-gray-14", "px-8", "flex", "items-center", "justify-start",]}
      >
        <a href="/">
          <img class="logo" src="/nacos_white.png" />
        </a>
        <div class="menu_close flex items-center cursor-pointer">
          <button class="text-gray-01 bg-gray-14 flex items-center">
            {
              align === 'home' ? (
                // <svg class="cursor-pointer" width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.61328 1.70312L15.6133 15.7031" stroke="#a3a6b3" stroke-width="2" stroke-linecap="round"></path><path d="M15.6133 1.70312L1.61328 15.7031" stroke="#a3a6b3" stroke-width="2" stroke-linecap="round"></path></svg>
                <svg class="cursor-pointer icon ml-8" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7494" id="mx_n_1702523741163" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM192.028 543.17h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.028c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM705.162 671.594l160-160-160-160z" fill="#f4f4f6" p-id="7495"></path></svg>
              ) : (
                <svg class="cursor-pointer icon ml-8" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7494" id="mx_n_1702523741163" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM192.028 543.17h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.028c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM705.162 671.594l160-160-160-160z" fill="#f4f4f6" p-id="7495"></path></svg>
              )
            }
          </button>
        </div>
      </div>

      <div data-mobile-menu-list class="w-full pl-8">
        <ul class="list-none pl-0">
          <li>
            <div mobile-menu-expand-docs>
              <button class="pl-0 mt-4 bg-gray-01 flex items-center cursor-pointer">
                <span class="mr-2 text-gray-14 text-sm">DOCS</span>
                <svg width="12" height="12" viewBox="0 0 9 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1L7 7L1 13" stroke="#2e3038" stroke-width="2"></path></svg>
              </button>
            </div>
            <div mobile-menu-expand-content-docs
              class="px-8 hidden invisible opacity-0 w-screen bg-gray-01 absolute left-0 right-0 top-16">
              <div mobile-menu-fold-docs class="flex items-center pt-8 pb-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" class="rotate-180 mr-4" fill="none" viewBox="0 0 9 14" stroke="#2e3038">
                  <path stroke-width="2" d="M1 1L7 7L1 13"></path>
                </svg>
                <span class="text-gray-14 text-sm">DOCS</span>
              </div>
              <div class="divider divider-vertical bg-gray-01 h-[0.05rem]">
              </div>
              <div>
                <span class="text-xs text-gray-12">Documentation</span>
                <ul class="pl-0 list-none">
                  {
                    docsSubMenu.shortcutMenus.Documentation.map((menu) => {
                      const { label, url } = menu;
                      return (
                        <a href={url} class="flex items-center mt-3 cursor-pointer">
                          <li class="text-sm text-gray-14">{label}</li>
                        </a>
                      );
                    })
                  }
                </ul>
              </div>
            </div>
          </li>
          <li class="mt-4">
            <a href="/nacosCloud" class="text-gray-14 text-sm">NACOS CLOUD</a>
          </li>
          <li>
            <div mobile-menu-expand-com>
              <button class="pl-0 mt-4 bg-gray-01 flex items-center cursor-pointer">
                <span  class="mr-2 text-gray-14 text-sm">COMMUNITY</span>
                <svg width="12" height="12" viewBox="0 0 9 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1L7 7L1 13" stroke="#2e3038" stroke-width="2"></path></svg>
              </button>
            </div>
            <div mobile-menu-expand-content-com
              class="px-8 hidden invisible opacity-0 w-screen bg-gray-01 absolute left-0 right-0 top-16">
              <div mobile-menu-fold-com class="flex items-center pt-8 pb-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" class="rotate-180 mr-4" fill="none" viewBox="0 0 9 14" stroke="#2e3038">
                  <path stroke-width="2" d="M1 1L7 7L1 13"></path>
                </svg>
                <span class="text-gray-14 text-sm">COMMUNITY</span>
              </div>
              <div class="divider divider-vertical bg-gray-01 h-[0.05rem]">
              </div>
              <div class="mobile_menu_community flex justify-between">
                <div class="mb-6">
                  <span class="text-xs text-gray-7">COMMUNITY</span>
                  <ul class="pl-0 list-none">
                    {
                      communitySubMenu.shortcutMenus.COMMUNITY.map((menu) => {
                        const { label } = menu;
                        return (
                          <li class="text-sm text-gray-14 mt-2 cursor-pointer">
                            {label}
                          </li>
                        );
                      })
                    }
                  </ul>
                </div>
                <div class="mb-6">
                  <span class="text-xs text-gray-7">EVENTS</span>
                  <ul class="pl-0 list-none">
                    {
                      communitySubMenu.shortcutMenus.EVENTS.map((menu) => {
                        const { label } = menu;
                        return (
                          <li class="text-sm text-gray-14 mt-2 cursor-pointer">
                            {label}
                          </li>
                        );
                      })
                    }
                  </ul>
                </div>
                <div class="mb-6">
                  <span class="text-xs text-gray-7">Resources</span>
                  <ul class="pl-0 list-none">
                    {
                      communitySubMenu.shortcutMenus.Resources.map((menu) => {
                        const { label } = menu;
                        return (
                          <li class="text-sm text-gray-14 mt-2 cursor-pointer">
                            {label}
                          </li>
                        );
                      })
                    }
                  </ul>
                </div>
              </div>
            </div>
          </li>
          <li class="mt-4">
            <a href="/" class="text-gray-14 text-sm">DEMO</a>
          </li>
        </ul>
      </div>
    </div>
  </div>
</header-layout>

<script>

  class HeaderLayout extends HTMLElement {
    private currentRoute: string;
    private modalPanel: HTMLDivElement;
    private docsMenu: HTMLDivElement;
    private nacosCloudMenu: HTMLDivElement;
    private communityMenu: HTMLDivElement;
    private docsMenuStatus: boolean;
    private communityMenuStatus: boolean;
    private menuHamburger: HTMLDivElement;
    private menuClose: HTMLDivElement;
    private mobileMenuExpandDocs: HTMLDivElement;
    private mobileMenuFoldDocs: HTMLDivElement;
    private mobileMenuExpandCom: HTMLDivElement;
    private mobileMenuFoldCom: HTMLDivElement;

    constructor() {
			super();
      // false 代表关闭 
      this.docsMenuStatus = false;
      this.communityMenuStatus = false;
      this.currentRoute = window.location.pathname;

      this.modalPanel = this.querySelector<HTMLDivElement>(
        "div[data-modal-panel]",
      )!;
      this.docsMenu = this.querySelector<HTMLDivElement>(
        "div[data-docs]"
      )!;
      const docsDropdown = this.querySelector<HTMLDivElement> (
        "div[data-docs-dropdown]",
      )!;
      const docsArrow = this.querySelector<SVGElement>(
        "svg[data-docs-arrow]"
      )!;
      this.nacosCloudMenu = this.querySelector<HTMLDivElement> (
        "div[data-nacos-cloud]",
      )!;
      this.communityMenu = this.querySelector<HTMLDivElement> (
        "div[data-community]",
      )!;
      const communityDropdown = this.querySelector<HTMLDivElement> (
        "div[data-community-dropdown]",
      )!;
      const communityArrow = this.querySelector<SVGElement> (
        "svg[data-community-arrow]",
      )!;
      this.menuHamburger = this.querySelector<HTMLDivElement>(
        "div.mobile_nav_menu"
      )!;
      this.menuClose = this.querySelector<HTMLDivElement>(
        "div.menu_close"
      )!;
      const mobileMenu = this.querySelector<HTMLDivElement>(
        "div[data-mobile-menu]",
      )!;
      this.mobileMenuExpandDocs = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-docs]",
      )!;
      this.mobileMenuFoldDocs = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-fold-docs]",
      )!;
      const mobileMenuExpandContentDocs = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-content-docs]",
      )!;
      this.mobileMenuExpandCom = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-com]",
      )!;
      this.mobileMenuFoldCom = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-fold-com]",
      )!;
      const mobileMenuExpandContentCom = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-content-com]",
      )!;

      this.menuSelectorEffect();

      // 移动端点击折叠按钮打开/关闭级联菜单
      this.menuHamburger.addEventListener("click", () => {
        this.showMobileMenu(mobileMenu)
      });
      // 关闭按钮同时关闭二级菜单
      this.menuClose.addEventListener("click", () => {
        this.hideMobileMenu(mobileMenu, true);
        this.hideMobileMenu(mobileMenuExpandContentDocs, true);
        this.hideMobileMenu(mobileMenuExpandContentCom, true);
      });
      // 移动端点击折叠按钮打开/关闭二级菜单
      this.mobileMenuExpandDocs.addEventListener("click", () => {
        this.showMobileMenu(mobileMenuExpandContentDocs);
      });
      this.mobileMenuFoldDocs.addEventListener("click", () => {
        this.hideMobileMenu(mobileMenuExpandContentDocs, false);
      });
      this.mobileMenuExpandCom.addEventListener("click", () => {
        this.showMobileMenu(mobileMenuExpandContentCom);
      });
      this.mobileMenuFoldCom.addEventListener("click", () => {
        this.hideMobileMenu(mobileMenuExpandContentCom, false);
      });

      // 点击蒙板关闭下拉菜单
      this.modalPanel.addEventListener("click", () => {
        this.communityMenuStatus = !this.communityMenuStatus;
        this.hideDropdownPanel(docsDropdown, docsArrow);
        this.hideDropdownPanel(communityDropdown, communityArrow);
      });

      // 绑定路由
      this.nacosCloudMenu.addEventListener("click", () => {
        window.location.pathname = "/nacosCloud";
      });

      // 绑定下拉 dropdown 事件
      this.docsMenu.addEventListener("click", () => {
        this.docsMenuStatus = !this.docsMenuStatus;

        if (this.docsMenuStatus) {
          this.hideDropdownPanel(communityDropdown, communityArrow);
          this.showDropdownPanel(docsDropdown, docsArrow);

        } else {
          this.hideDropdownPanel(docsDropdown, docsArrow);
        }
      });
      this.communityMenu.addEventListener("click", () => {
        this.communityMenuStatus = !this.communityMenuStatus;

        if (this.communityMenuStatus) {
          this.hideDropdownPanel(docsDropdown, docsArrow);
          this.showDropdownPanel(communityDropdown, communityArrow);

        } else {
          this.hideDropdownPanel(communityDropdown, communityArrow);
        }
      });
    }

    // 选中效果
    menuSelectorEffect = () => {

      if (this.currentRoute.indexOf('/docs') !== -1) {
        this.docsMenu?.classList.add('menu-selected');
      } else {
        this.docsMenu?.classList.remove('menu-selected');
      }

      if (this.currentRoute.indexOf('/nacosCloud') !== -1) {
        this.nacosCloudMenu?.classList.add('menu-selected');

      }else {
        this.nacosCloudMenu?.classList.remove('menu-selected');
      }
    };

    // 显示下拉菜单内容
    showDropdownPanel = (htmlElement, svgElement) => {
      this.modalPanel?.classList.remove('hidden');
      this.modalPanel?.classList.add('block');
      svgElement?.classList.remove('arrow-down');
      svgElement?.classList.add('arrow-up');
      htmlElement?.classList.remove('hidden', 'invisible', 'opacity-0');
      htmlElement?.classList.add('block', 'visible', 'opacity-100');
      document.body.classList.remove('overflow-auto');
      document.body.classList.add('overflow-hidden');
    };

    // 隐藏下拉菜单内容
    hideDropdownPanel = (htmlElement, svgElement) => {
      this.modalPanel?.classList.remove('block');
      this.modalPanel?.classList.add('hidden');
      svgElement?.classList.remove('arrow-up');
      svgElement?.classList.add('arrow-down');
      htmlElement?.classList.remove('block', 'visible', 'opacity-100');
      htmlElement?.classList.add('hidden', 'invisible', 'opacity-0');
      document.body.classList.remove('overflow-hidden');
      document.body.classList.add('overflow-auto');
    };

    // 展开移动端二级菜单
    showMobileMenu = (htmlElement) => {
      htmlElement?.classList.remove("hidden", "invisible", "opacity-0");
      htmlElement?.classList.add("block", "visible", "opacity-100");
      document.body.classList.remove("overflow-auto");
      document.body.classList.add("overflow-hidden");
    };
    // 隐藏移动端二级菜单
    hideMobileMenu = (htmlElement, value) => {
      htmlElement?.classList.remove("block", "visible", "opacity-100");
      htmlElement?.classList.add("hidden", "invisible", "opacity-0");
      value && document.body.classList.remove("overflow-hidden");
      value && document.body.classList.add("overflow-auto");
    };
  }
  customElements.define("header-layout", HeaderLayout);
</script>

<style>
  :root {
    --justify-content: {justifyContent}
  }
  header-layout {
    --logo-width: 96px;
    --header-height: 4rem;
    --header-docs-height: 3.5rem;
    --header-ml-padding: 1rem;
    --header-xl-padding: 2rem;
  }
  .header {
    display: block;
    position: var(position);
    top: 0;
    /* position: relative; */
    z-index: 100000;
    /* height: var(--header-height); */
  }
  .nav {
    z-index: 100000;
    /* height: var(--header-height); */
    padding-left: var(--header-xl-padding);
    padding-right: var(--header-xl-padding);
  }
  .logo {
    vertical-align: sub;
    width: var(--logo-width);
  }
  .arrow-up {
    transform: rotate(180deg);
    transition: transform .3s;
  }
  .arrow-down {
    transform: rotate(0deg);
    transition: transform .3s;
  }
  .menu-item:hover .title{
    font-weight: 500;
    color: theme("colors.gray.03");
  }
  .menu-selected {
    font-weight: 500;
    color: theme("colors.gray.03");
  }
  .btn:hover {
    background-color: theme("colors.gray.12") !important;
  }
  .shortcut-menu {
    border-left: solid 1px theme('colors.gray.12');
  }
  .shortcut-card {
    position: relative;
  }
  .shortcut-card:hover {
    animation: shake 0.82s cubic-bezier(.36, .07, .19, .97) both;
  }
  @keyframes shake {
    10%, 90% {
      transform: translate3d(-1px, 0, 0);
    }
    20%, 80% {
      transform: translate3d(2px, 0, 0);
    }
    30%, 50%, 70% {
      transform: translate3d(-4px, 0, 0);
    }
    40%, 60% {
      transform: translate3d(4px, 0, 0);
    }
  }
  .modal-panel {
    z-index: 80;
    backdrop-filter: blur(4px);
    transform: translateZ(0);
  }
  .dropdown-panel {
    z-index: 100;
    /* top: var(--header-height); */
  }
  a {
    text-decoration: none;
  }

  @media (max-width: 64rem) {
    .nav {
      justify-content: flex-start !important;
    }
    .pc_nav_menu {
      display: none !important;
    }

    .mobile_nav_menu {
      display: block !important;
    }
  }

  @media (max-width: 36rem) {
    .nav {
      justify-content: 'flex-start' !important;
    }
    .mobile_menu_community {
      display: block !important;
    }
  }
</style>