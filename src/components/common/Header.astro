---
interface Props {
  align?: 'home' | 'docs',
  position?: 'static' | 'sticky';
}

const { align = 'home', position = 'sticky' } = Astro.props;
const height = align === 'home' ? '4rem' : '3.5rem';
const justifyContent = align === 'home' ? 'space-between' : 'flex-start';
const docsSubMenu = {
  shortcutMenus: {
    Documentation: [
      { label: '1.x', url: '/docs/what-is-nacos' },
      { label: '2.x', url: '/docs/v2/what-is-nacos' },
    ]
  }
};
const communitySubMenu = {
  shortcutMenus: {
    COMMUNITY: [
      { label: 'Contact', url: '/' },
      { label: 'Report', url: '/' },
      { label: 'Contribute', url: '/' },
      { label: 'Stars', url: '/' },
    ],
    EVENTS: [
      { label: 'Events', url: '/' },
      { label: 'News', url: '/' },
      { label: 'Meetup', url: '/' },
    ],
    Resources: [
      { label: 'Blog', url: '/blog' },
      { label: 'E-book', url: '/docs/ebook/iez8a4' },
      { label: 'Download', url: '/download/nacos-service' },
    ],
    CONTACT_US: [
      { label: 'Github', url: '/' },
      { label: 'DingDing', url: '/' },
      { label: 'E-mail', url: '/' },
    ],
  },
  shortcutCards: [
    {
      eventName: 'READ ARTICLE',
      imgUrl: '/left-shortcut.png',
      description: 'Key to service-centric (for example microservice or cloud-native) architectures.',
    },
    {
      eventName: 'READ ARTICLE',
      imgUrl: '/right-shortcut.png',
      description: 'An easy-to-use platform for building cloud native applications',
    }
  ],
};

---

<header-layout class="header bg-gray-14 relative" style={`position: ${position}; height: ${height}`}>
  <div data-modal-panel class="modal-panel hidden h-screen absolute left-0 right-0 top-0"></div>
  <div style={`height: ${height}`} class:list={["nav", "bg-gray-14", "relative", "top-0", "right-0", "bottom-0", "left-0", "flex", "items-center", "justify-between",]}>
    <!-- logo -->
    <a href="/">
      <img class="logo" src="/nacos_white.png" />
    </a>
    <!-- 菜单 -->
    <div class="pc_nav_menu flex h-full items-center">
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-docs class="h-full flex items-center p-0.5">
          <span class="title">DOCS</span>
          <svg data-docs-arrow class="arrow ml-2" width="10" height="7" viewBox="0 0 10 7" fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <path d="M8.05264 2L5.05264 5.00649L2.05264 2" stroke="#a3a6b3" stroke-width="1.25" stroke-linecap="square">
            </path>
          </svg>
        </div>
        <div 
          data-docs-dropdown 
          style={`top: ${height}`} 
          class="dropdown-panel bg-gray-14 hidden invisible opacity-0 absolute left-0 right-0"
        >
          <div class="flex pb-10 pt-14 px-24">
            <div class="shortcut-menu flex flex-col px-7 mr-14">
              <span class="text-xs text-gray-10 mb-2">Documentation</span>
              {
                docsSubMenu.shortcutMenus.Documentation.map(menu => {
                  const { label, url } = menu;
                  return (
                    <a href={url} class="flex items-center mt-3 cursor-pointer">
                      <span class="text-sm text-gray-02">{label}</span>
                    </a>
                  );
                })
              }
            </div>
          </div>
        </div>
      </div>
      <span class="text-gray-06 text-xs">|</span>
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-nacos-cloud class="h-full flex items-center p-0.5">
          <span class="title">NACOS CLOUD</span>
        </div>
      </div>
      <span class="text-gray-06 text-xs">|</span>
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-community class="h-full flex items-center p-0.5">
          <span class="title">COMMUNITY</span>
          <svg data-community-arrow class="arrow ml-2" width="10" height="7" viewBox="0 0 10 7" fill="none"
            xmlns="http://www.w3.org/2000/svg">
            <path d="M8.05264 2L5.05264 5.00649L2.05264 2" stroke="#a3a6b3" stroke-width="1.25" stroke-linecap="square">
            </path>
          </svg>
        </div>
        <div 
          data-community-dropdown 
          style={`top: ${height}`} 
          class="dropdown-panel bg-gray-14 hidden invisible opacity-0 absolute left-0 right-0 z-50 px-24"
        >
          <div class="flex pb-10 pt-14 justify-center flex-col  xl:px-20 2xl:px-20">
            <div class="flex justify-between mb-12">
              <div class="flex mr-32">
                <div class="shortcut-menu flex flex-col px-7 mr-14">
                  <span class="text-xs text-gray-10 mb-2">COMMUNITY</span>
                  {
                    communitySubMenu.shortcutMenus.COMMUNITY.map(menu => {
                      const { label,url } = menu;
                      return (
                        <a class="text-sm text-gray-02 mt-3 " href={url}>{label}</a>
                      );
                    })
                  }
                </div>
                <div class="shortcut-menu flex flex-col px-7 mr-14">
                  <span class="text-xs text-gray-10 mb-2">EVENTS</span>
                  {
                    communitySubMenu.shortcutMenus.EVENTS.map(menu => {
                      const { label,url } = menu;
                      return (
                      <a class="text-sm text-gray-02 mt-3 " href={url}>{label}</a>
                      );
                    })
                  }
                  <span class="text-xs text-gray-10 mb-2 mt-10">Resources</span>
                  {
                    communitySubMenu.shortcutMenus.Resources.map(menu => {
                      const { label, url } = menu;
                      return (
                        <a class="text-sm text-gray-02 mt-3 " href={url}>{label}</a>
                      );
                    })
                  }
                </div>
              </div>
              <div class="flex">
                {
                  communitySubMenu.shortcutCards.map((item, index) => {
                    const { eventName, description, imgUrl } = item;
                    return (
                      <div class="shortcut-card bg-gray-13 rounded-2xl p-2 flex flex-col w-64 ml-4">
                        <img class="" src={imgUrl} />
                        <div class="text-blue-01 text-sm mt-3 line-clamp-3 h-16">{description}</div>
                        <button class="btn mt-8 w-fit text-xs bg-gray-12 text-gray-01 border-0 rounded-3xl">{eventName}</button>
                      </div>
                    );
                  })
                }
              </div>
            </div>
            <!-- 联系我们 -->
            <div class="flex justify-between mb-14 relative  rounded-2xl bg-gray-13 h-9 pl-10 pr-20 ">
              <span class="text-gray-07 text-xs tracking-[0.15em] leading-9">CONTACT US</span>
              <div class="leading-9 flex cursor-pointer">
                <a class="mr-10 text-gray-02" href="">
                  <svg class="icon" viewBox="0 0 1024 800" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="3233" width="16" height="16"><path d="M20.48 503.72608c0 214.4256 137.4208 396.73856 328.94976 463.6672 25.8048 6.5536 21.87264-11.8784 21.87264-24.33024v-85.07392c-148.93056 17.44896-154.86976-81.1008-164.94592-97.52576-20.23424-34.52928-67.91168-43.33568-53.69856-59.76064 33.91488-17.44896 68.48512 4.42368 108.46208 63.61088 28.95872 42.88512 85.44256 35.6352 114.15552 28.4672a138.8544 138.8544 0 0 1 38.0928-66.7648c-154.25536-27.60704-218.60352-121.77408-218.60352-233.79968 0-54.31296 17.94048-104.2432 53.0432-144.54784-22.36416-66.43712 2.08896-123.24864 5.3248-131.6864 63.81568-5.7344 130.00704 45.6704 135.168 49.68448 36.2496-9.78944 77.57824-14.9504 123.82208-14.9504 46.4896 0 88.064 5.3248 124.5184 15.23712 12.288-9.4208 73.80992-53.53472 133.12-48.128 3.15392 8.43776 27.0336 63.93856 6.02112 129.4336 35.59424 40.38656 53.69856 90.76736 53.69856 145.24416 0 112.18944-64.7168 206.4384-219.42272 233.71776a140.0832 140.0832 0 0 1 41.7792 99.9424v123.4944c0.86016 9.87136 0 19.6608 16.50688 19.6608 194.31424-65.49504 334.2336-249.15968 334.2336-465.5104C1002.57792 232.48896 782.66368 12.77952 511.5904 12.77952 240.18944 12.65664 20.48 232.40704 20.48 503.72608z" fill="#567BE1" opacity=".65" p-id="3234"></path></svg>
                  Github
                </a>
                <div class="hoverable">
                  <img class="tooltip hidden w-40 absolute bottom-9" src="https://img.alicdn.com/imgextra/i4/O1CN01ivNLl61l6i93SDfcz_!!6000000004770-0-tps-854-1102.jpg" alt="">
                  <span class="mr-10 text-gray-02">
                    <svg class="icon" viewBox="0 0 1024 800" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="4747" width="16" height="16"><path d="M0 0h1024v1024H0z" fill="#567BE1" fill-opacity="0" p-id="4748"></path><path d="M786.978133 481.6896c-153.770667-117.5552-327.133867-273.237333-517.188266-440.183467-14.984533-13.141333-28.2624-7.953067-34.952534 9.5232-42.8032 111.957333-1.297067 211.421867 65.774934 268.731734 67.345067 57.582933 167.492267 110.592 228.829866 138.683733 2.389333 1.092267 0.3072 4.573867-2.116266 3.515733-112.674133-49.152-191.044267-84.650667-297.3696-165.819733-11.434667-8.738133-23.04-5.3248-24.405334 11.707733-8.704 107.042133 60.484267 191.146667 137.728 219.5456 47.786667 17.6128 100.0448 27.3408 148.548267 33.109334 2.525867 0.341333 1.9456 4.027733-0.580267 4.027733-62.498133 0.2048-138.001067-14.609067-203.332266-39.458133-13.789867-5.256533-18.5344 5.632-16.418134 14.267733 11.1616 45.226667 67.652267 114.346667 157.5936 128.887467 16.827733 2.730667 34.747733 3.072 50.722134 2.628266 3.7888-0.136533 4.7104 1.9456 3.4816 4.846934 0 0-61.098667 103.6288-63.761067 108.066133-2.082133 3.447467-0.8192 6.212267 3.515733 6.212267h80.622934c3.754667 0 6.0416 2.389333 4.096 5.5296-1.877333 3.140267-107.656533 176.7424-112.64 185.0368-4.369067 7.202133 0.785067 12.731733 8.942933 6.826666 8.192-5.9392 346.180267-250.88 355.805867-257.911466 4.437333-3.208533 3.413333-7.5776-2.833067-7.5776h-72.2944c-4.744533 0-5.768533-3.140267-2.56-6.314667 3.242667-3.1744 82.090667-80.964267 110.08-110.08 29.184-30.378667 44.100267-86.050133-5.290667-123.8016" fill="#567BE1" p-id="4749"></path></svg>
                    DingDing
                  </span>
                </div>
                <a class="text-gray-02" href="">
                  <svg class="icon" viewBox="0 0 1024 800" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="5876" width="16" height="16"><path d="M953.344 190.4l-409.6 326.528a53.376 53.376 0 0 1-63.488 0l-409.6-326.528c14.976-12.8 33.984-19.84 53.696-19.712h775.296c20.608 0 39.36 7.424 53.696 19.712z m27.968 82.112v500.672c0 44.288-36.48 80.128-81.664 80.128H124.352c-45.12 0-81.664-35.84-81.664-80.128V272.512l405.76 323.52c35.072 27.968 92.096 27.904 127.104 0l405.76-323.52z" fill="#567BE1" p-id="5877"></path></svg>
                  E-mail
                </a>
              </div>
            </div>
          </div>
        </div>
      </div>
      <span class="text-gray-06 text-xs">|</span>
      <div class="menu-item h-full flex items-center cursor-pointer text-gray-06 text-sm px-4">
        <div data-demo class="h-full flex items-center p-0.5">
          <span class="title">DEMO</span>
        </div>
      </div>
    </div>
    <!-- 右侧菜单 -->
    <div>
      <slot></slot>
    </div>
    <!-- 小屏适配 -->
    <div class="mobile_nav_menu hidden cursor-pointer">
      <button class="text-gray-01 bg-gray-14 flex items-center">
        {
          align === 'home' ? (
            // <svg class="cursor-pointer" width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg"><path fill-rule="evenodd" clip-rule="evenodd" d="M21 17H3C2.447 17 2 17.448 2 18C2 18.552 2.447 19 3 19H21C21.553 19 22 18.552 22 18C22 17.448 21.553 17 21 17ZM21 5H3C2.447 5 2 5.448 2 6C2 6.552 2.447 7 3 7H21C21.553 7 22 6.552 22 6C22 5.448 21.553 5 21 5ZM22 12C22 12.552 21.553 13 21 13H3C2.447 13 2 12.552 2 12C2 11.448 2.447 11 3 11H21C21.553 11 22 11.448 22 12Z" fill="currentColor"></path><mask id="mask0" mask="true" mask-type="alpha" maskUnits="userSpaceOnUse" x="2" y="5" width="20" height="14"><path fill-rule="evenodd" clip-rule="evenodd" d="M21 17H3C2.447 17 2 17.448 2 18C2 18.552 2.447 19 3 19H21C21.553 19 22 18.552 22 18C22 17.448 21.553 17 21 17ZM21 5H3C2.447 5 2 5.448 2 6C2 6.552 2.447 7 3 7H21C21.553 7 22 6.552 22 6C22 5.448 21.553 5 21 5ZM22 12C22 12.552 21.553 13 21 13H3C2.447 13 2 12.552 2 12C2 11.448 2.447 11 3 11H21C21.553 11 22 11.448 22 12Z" fill="currentColor"></path></mask><g mask="url(#mask0)"><path fill-rule="evenodd" clip-rule="evenodd" d="M0 0H24V24H0V0Z" fill="#a3a6b3"></path></g></svg>
            <svg class="cursor-pointer icon ml-4" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6304" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 479.169H438.553c-17.673 0-32 14.327-32 32s14.327 32 32 32h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM319.028 351.594l-160 160 160 160z" fill="#f4f4f6" p-id="6305"></path></svg>
          ) : (
            <svg class="cursor-pointer icon ml-4" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="6304" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 479.169H438.553c-17.673 0-32 14.327-32 32s14.327 32 32 32h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM319.028 351.594l-160 160 160 160z" fill="#f4f4f6" p-id="6305"></path></svg>
          )
        }
      </button>
    </div>
    <!-- 移动端导航菜单 -->
    <div 
      data-mobile-menu
      class="overflow-hidden hidden flex flex-col w-screen bg-gray-01 h-screen absolute left-0 right-0 top-0"
    >
      <!-- 顶部logo -->
      <div 
        style={`height: ${height}`} 
        class:list={["mobile_nav", "bg-gray-14", "px-8", "flex", "items-center", "justify-start",]}
      >
        <a href="/">
          <img class="logo" src="/nacos_white.png" />
        </a>
        <div class="menu_close flex items-center cursor-pointer">
          <button class="text-gray-01 bg-gray-14 flex items-center">
            {
              align === 'home' ? (
                // <svg class="cursor-pointer" width="18" height="18" viewBox="0 0 18 18" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1.61328 1.70312L15.6133 15.7031" stroke="#a3a6b3" stroke-width="2" stroke-linecap="round"></path><path d="M15.6133 1.70312L1.61328 15.7031" stroke="#a3a6b3" stroke-width="2" stroke-linecap="round"></path></svg>
                <svg class="cursor-pointer icon ml-4" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7494" id="mx_n_1702523741163" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM192.028 543.17h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.028c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM705.162 671.594l160-160-160-160z" fill="#f4f4f6" p-id="7495"></path></svg>
              ) : (
                <svg class="cursor-pointer icon ml-4" viewBox="0 0 1024 1024" version="1.1" xmlns="http://www.w3.org/2000/svg" p-id="7494" id="mx_n_1702523741163" width="24" height="24"><path d="M192.037 287.953h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32zM192.028 543.17h393.608c17.673 0 32-14.327 32-32s-14.327-32-32-32H192.028c-17.673 0-32 14.327-32 32s14.327 32 32 32zM832.161 735.802H192.037c-17.673 0-32 14.327-32 32s14.327 32 32 32h640.124c17.673 0 32-14.327 32-32s-14.327-32-32-32zM705.162 671.594l160-160-160-160z" fill="#f4f4f6" p-id="7495"></path></svg>
              )
            }
          </button>
        </div>
      </div>

      <div data-mobile-menu-list class="w-full pl-8">
        <ul class="list-none pl-0">
          <li>
            <div mobile-menu-expand-docs>
              <button class="pl-0 mt-4 bg-gray-01 flex items-center cursor-pointer">
                <span class="mr-2 text-gray-14 text-sm">DOCS</span>
                <svg width="12" height="12" viewBox="0 0 9 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1L7 7L1 13" stroke="#2e3038" stroke-width="2"></path></svg>
              </button>
            </div>
            <div mobile-menu-expand-content-docs
              class="px-8 hidden invisible opacity-0 w-screen h-screen bg-gray-01 absolute left-0 right-0 top-16">
              <div mobile-menu-fold-docs class="flex items-center pt-8 pb-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" class="rotate-180 mr-4" fill="none" viewBox="0 0 9 14" stroke="#2e3038">
                  <path stroke-width="2" d="M1 1L7 7L1 13"></path>
                </svg>
                <span class="text-gray-14 text-sm">DOCS</span>
              </div>
              <div class="divider divider-vertical bg-gray-01 h-[0.05rem]">
              </div>
              <div>
                <span class="text-xs text-gray-07">Documentation</span>
                <ul class="pl-0 list-none">
                  {
                    docsSubMenu.shortcutMenus.Documentation.map((menu) => {
                      const { label, url } = menu;
                      return (
                        <a href={url} class="flex items-center mt-3 cursor-pointer">
                          <li class="text-sm text-gray-14">{label}</li>
                        </a>
                      );
                    })
                  }
                </ul>
              </div>
            </div>
          </li>
          <li class="mt-4">
            <a href="/cloud" class="text-gray-14 text-sm">NACOS CLOUD</a>
          </li>
          <li>
            <div mobile-menu-expand-com>
              <button class="pl-0 mt-4 bg-gray-01 flex items-center cursor-pointer">
                <span  class="mr-2 text-gray-14 text-sm">COMMUNITY</span>
                <svg width="12" height="12" viewBox="0 0 9 14" fill="none" xmlns="http://www.w3.org/2000/svg"><path d="M1 1L7 7L1 13" stroke="#2e3038" stroke-width="2"></path></svg>
              </button>
            </div>
            <div mobile-menu-expand-content-com
              class="px-8 hidden invisible opacity-0 w-screen bg-gray-01 absolute left-0 right-0 top-16">
              <div mobile-menu-fold-com class="flex items-center pt-8 pb-4">
                <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" class="rotate-180 mr-4" fill="none" viewBox="0 0 9 14" stroke="#2e3038">
                  <path stroke-width="2" d="M1 1L7 7L1 13"></path>
                </svg>
                <span class="text-gray-14 text-sm">COMMUNITY</span>
              </div>
              <div class="divider divider-vertical bg-gray-01 h-[0.05rem]">
              </div>
              <div class="mobile_menu_community flex justify-between">
                <div class="mb-6">
                  <span class="text-xs text-gray-07">COMMUNITY</span>
                  <ul class="pl-0 list-none">
                    {
                      communitySubMenu.shortcutMenus.COMMUNITY.map((menu) => {
                        const { label, url } = menu;
                        return (
                          <a href={url}>
                            <li class="text-sm text-gray-14 mt-2 cursor-pointer">
                              {label}
                            </li>
                          </a>
                        );
                      })
                    }
                  </ul>
                </div>
                <div class="mb-6">
                  <span class="text-xs text-gray-07">EVENTS</span>
                  <ul class="pl-0 list-none">
                    {
                      communitySubMenu.shortcutMenus.EVENTS.map((menu) => {
                        const { label, url } = menu;
                        return (
                          <a href={url}>
                            <li class="text-sm text-gray-14 mt-2 cursor-pointer">
                              {label}
                            </li>
                          </a>
                        );
                      })
                    }
                  </ul>
                </div>
                <div class="mb-6">
                  <span class="text-xs text-gray-07">Resources</span>
                  <ul class="pl-0 list-none">
                    {
                      communitySubMenu.shortcutMenus.Resources.map((menu) => {
                        const { label, url } = menu;
                        return (
                          <a href={url}>
                            <li class="text-sm text-gray-14 mt-2 cursor-pointer">
                              {label}
                            </li>
                          </a>
                        );
                      })
                    }
                  </ul>
                </div>
                <div class="mb-6">
                  <span class="text-xs text-gray-07">CONTACT US</span>
                  <ul class="pl-0 list-none">
                    {
                      communitySubMenu.shortcutMenus.CONTACT_US.map((menu) => {
                        const { label, url } = menu;
                        return (
                          <a href={url}>
                            <li class="text-sm text-gray-14 mt-2 cursor-pointer">
                              {label}
                            </li>
                          </a>
                        );
                      })
                    }
                  </ul>
                </div>
              </div>
            </div>
          </li>
          <li class="mt-4">
            <a href="/" class="text-gray-14 text-sm">DEMO</a>
          </li>
        </ul>
      </div>
    </div>
  </div>
</header-layout>

<script>

  class HeaderLayout extends HTMLElement {
    private currentRoute: string;
    private modalPanel: HTMLDivElement;
    private docsMenu: HTMLDivElement;
    private nacosCloudMenu: HTMLDivElement;
    private communityMenu: HTMLDivElement;
    private docsMenuStatus: boolean;
    private communityMenuStatus: boolean;
    private menuHamburger: HTMLDivElement;
    private menuClose: HTMLDivElement;
    private mobileMenuExpandDocs: HTMLDivElement;
    private mobileMenuFoldDocs: HTMLDivElement;
    private mobileMenuExpandCom: HTMLDivElement;
    private mobileMenuFoldCom: HTMLDivElement;
    private hoverable: HTMLDivElement;

    constructor() {
			super();
      // false 代表关闭 
      this.docsMenuStatus = false;
      this.communityMenuStatus = false;
      this.currentRoute = window.location.pathname;

      this.modalPanel = this.querySelector<HTMLDivElement>(
        "div[data-modal-panel]",
      )!;
      this.docsMenu = this.querySelector<HTMLDivElement>(
        "div[data-docs]"
      )!;
      const docsDropdown = this.querySelector<HTMLDivElement> (
        "div[data-docs-dropdown]",
      )!;
      const docsArrow = this.querySelector<SVGElement>(
        "svg[data-docs-arrow]"
      )!;
      this.nacosCloudMenu = this.querySelector<HTMLDivElement> (
        "div[data-nacos-cloud]",
      )!;
      this.communityMenu = this.querySelector<HTMLDivElement> (
        "div[data-community]",
      )!;
      const communityDropdown = this.querySelector<HTMLDivElement> (
        "div[data-community-dropdown]",
      )!;
      const communityArrow = this.querySelector<SVGElement> (
        "svg[data-community-arrow]",
      )!;
      this.menuHamburger = this.querySelector<HTMLDivElement>(
        "div.mobile_nav_menu"
      )!;
      this.menuClose = this.querySelector<HTMLDivElement>(
        "div.menu_close"
      )!;
      const mobileMenu = this.querySelector<HTMLDivElement>(
        "div[data-mobile-menu]",
      )!;
      this.mobileMenuExpandDocs = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-docs]",
      )!;
      this.mobileMenuFoldDocs = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-fold-docs]",
      )!;
      const mobileMenuExpandContentDocs = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-content-docs]",
      )!;
      this.mobileMenuExpandCom = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-com]",
      )!;
      this.mobileMenuFoldCom = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-fold-com]",
      )!;
      const mobileMenuExpandContentCom = this.querySelector<HTMLDivElement>(
        "div[mobile-menu-expand-content-com]",
      )!;
      this.hoverable = this.querySelector<HTMLDivElement>(
        "div.hoverable",
      )!;
      const tooltip = this.querySelector(
        "img.tooltip",
      )!;

      this.menuSelectorEffect();

      // 移动端点击折叠按钮打开/关闭级联菜单
      this.menuHamburger.addEventListener("click", () => {
        this.showMobileMenu(mobileMenu)
      });
      // 关闭按钮同时关闭二级菜单
      this.menuClose.addEventListener("click", () => {
        this.hideMobileMenu(mobileMenu, true);
        this.hideMobileMenu(mobileMenuExpandContentDocs, true);
        this.hideMobileMenu(mobileMenuExpandContentCom, true);
      });
      // 移动端点击折叠按钮打开/关闭二级菜单
      this.mobileMenuExpandDocs.addEventListener("click", () => {
        this.showMobileMenu(mobileMenuExpandContentDocs);
      });
      this.mobileMenuFoldDocs.addEventListener("click", () => {
        this.hideMobileMenu(mobileMenuExpandContentDocs, false);
      });
      this.mobileMenuExpandCom.addEventListener("click", () => {
        this.showMobileMenu(mobileMenuExpandContentCom);
      });
      this.mobileMenuFoldCom.addEventListener("click", () => {
        this.hideMobileMenu(mobileMenuExpandContentCom, false);
      });
      this.hoverable.addEventListener("mouseenter", () => {
        this.showMobileMenu(tooltip);
      });
      this.hoverable.addEventListener("mouseleave", () => {
        this.hideMobileMenu(tooltip);
      });

      // 点击蒙板关闭下拉菜单
      this.modalPanel.addEventListener("click", () => {
        this.communityMenuStatus = !this.communityMenuStatus;
        this.hideDropdownPanel(docsDropdown, docsArrow);
        this.hideDropdownPanel(communityDropdown, communityArrow);
      });

      // 绑定路由
      this.nacosCloudMenu.addEventListener("click", () => {
        window.location.pathname = "/cloud";
      });

      // 绑定下拉 dropdown 事件
      this.docsMenu.addEventListener("click", () => {
        this.docsMenuStatus = !this.docsMenuStatus;

        if (this.docsMenuStatus) {
          this.hideDropdownPanel(communityDropdown, communityArrow);
          this.showDropdownPanel(docsDropdown, docsArrow);

        } else {
          this.hideDropdownPanel(docsDropdown, docsArrow);
        }
      });
      this.communityMenu.addEventListener("click", () => {
        this.communityMenuStatus = !this.communityMenuStatus;

        if (this.communityMenuStatus) {
          this.hideDropdownPanel(docsDropdown, docsArrow);
          this.showDropdownPanel(communityDropdown, communityArrow);

        } else {
          this.hideDropdownPanel(communityDropdown, communityArrow);
        }
      });
    }

    // 选中效果
    menuSelectorEffect = () => {

      if (this.currentRoute.indexOf('/docs') !== -1) {
        this.docsMenu?.classList.add('menu-selected');
      } else {
        this.docsMenu?.classList.remove('menu-selected');
      }

      if (this.currentRoute.indexOf('/cloud') !== -1) {
        this.nacosCloudMenu?.classList.add('menu-selected');

      }else {
        this.nacosCloudMenu?.classList.remove('menu-selected');
      }
    };

    // 显示下拉菜单内容
    showDropdownPanel = (htmlElement, svgElement) => {
      this.modalPanel?.classList.remove('hidden');
      this.modalPanel?.classList.add('block');
      svgElement?.classList.remove('arrow-down');
      svgElement?.classList.add('arrow-up');
      htmlElement?.classList.remove('hidden', 'invisible', 'opacity-0');
      htmlElement?.classList.add('block', 'visible', 'opacity-100');
      document.body.classList.remove('overflow-auto');
      document.body.classList.add('overflow-hidden');
    };

    // 隐藏下拉菜单内容
    hideDropdownPanel = (htmlElement, svgElement) => {
      this.modalPanel?.classList.remove('block');
      this.modalPanel?.classList.add('hidden');
      svgElement?.classList.remove('arrow-up');
      svgElement?.classList.add('arrow-down');
      htmlElement?.classList.remove('block', 'visible', 'opacity-100');
      htmlElement?.classList.add('hidden', 'invisible', 'opacity-0');
      document.body.classList.remove('overflow-hidden');
      document.body.classList.add('overflow-auto');
    };

    // 展开移动端二级菜单
    showMobileMenu = (htmlElement) => {
      htmlElement?.classList.remove("hidden", "invisible", "opacity-0");
      htmlElement?.classList.add("block", "visible", "opacity-100");
      document.body.classList.remove("overflow-auto");
      document.body.classList.add("overflow-hidden");
    };
    // 隐藏移动端二级菜单
    hideMobileMenu = (htmlElement, value?) => {
      htmlElement?.classList.remove("block", "visible", "opacity-100");
      htmlElement?.classList.add("hidden", "invisible", "opacity-0");
      value && document.body.classList.remove("overflow-hidden");
      value && document.body.classList.add("overflow-auto");
    };
  }
  customElements.define("header-layout", HeaderLayout);
</script>

<style define:vars={{ justifyContent }}>
  header-layout {
    --logo-width: 96px;
    --header-height: 4rem;
    --header-docs-height: 3.5rem;
    --header-ml-padding: 1rem;
    --header-xl-padding: 2rem;
  }
  .header {
    display: block;
    position: var(position);
    top: 0;
    /* position: relative; */
    z-index: 100000;
    /* height: var(--header-height); */
  }
  .nav {
    z-index: 100000;
    /* height: var(--header-height); */
    padding-left: var(--header-xl-padding);
    padding-right: var(--header-xl-padding);
  }
  .logo {
    vertical-align: sub;
    width: var(--logo-width);
  }
  .arrow-up {
    transform: rotate(180deg);
    transition: transform .3s;
  }
  .arrow-down {
    transform: rotate(0deg);
    transition: transform .3s;
  }
  .menu-item:hover .title{
    font-weight: 500;
    color: theme("colors.gray.03");
  }
  .menu-selected {
    font-weight: 500;
    color: theme("colors.gray.03");
  }
  .btn:hover {
    background-color: theme("colors.gray.12") !important;
  }
  .shortcut-menu {
    border-left: solid 1px theme('colors.gray.12');
  }
  .shortcut-card {
    position: relative;
  }
  .shortcut-card:hover {
    animation: shake 0.82s cubic-bezier(.36, .07, .19, .97) both;
  }
  @keyframes shake {
    10%, 90% {
      transform: translate3d(-1px, 0, 0);
    }
    20%, 80% {
      transform: translate3d(2px, 0, 0);
    }
    30%, 50%, 70% {
      transform: translate3d(-4px, 0, 0);
    }
    40%, 60% {
      transform: translate3d(4px, 0, 0);
    }
  }
  .modal-panel {
    z-index: 80;
    backdrop-filter: blur(4px);
    transform: translateZ(0);
  }
  .dropdown-panel {
    z-index: 100;
    /* top: var(--header-height); */
  }
  a {
    text-decoration: none;
  }

  @media (min-width: 50rem) and (max-width: 72rem) {
    .nav {
      justify-content: var(--justifyContent) !important;
    }
    .mobile_nav {
      justify-content: var(--justifyContent) !important;
    }
    .pc_nav_menu {
      display: none !important;
    }

    .mobile_nav_menu {
      display: block !important;
    }
  }

  @media (max-width: 50rem) {
    .pc_nav_menu {
      display: none !important;
    }

    .mobile_nav_menu {
      display: block !important;
    }
    .nav {
      justify-content: var(--justifyContent) !important;
    }
    .mobile_nav {
      justify-content: var(--justifyContent) !important;
    }
    .mobile_menu_community {
      display: block !important;
    }
  }
</style>